{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91799\\\\Desktop\\\\bomb-dashboard-final-task\\\\src\\\\views\\\\Dashboard\\\\components\\\\Harvest.tsx\";\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport useClaimRewardTimerBoardroom from '../../../hooks/boardroom/useClaimRewardTimerBoardroom';\nimport useClaimRewardCheck from '../../../hooks/boardroom/useClaimRewardCheck';\nimport useHarvestFromBoardroom from '../../../hooks/useHarvestFromBoardroom';\nimport useEarningsOnBoardroom from '../../../hooks/useEarningsOnBoardroom';\nimport useBombStats from '../../../hooks/useBombStats';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\n\nconst Harvest = () => {\n  const bombStats = useBombStats();\n  const {\n    onReward\n  } = useHarvestFromBoardroom();\n  const earnings = useEarningsOnBoardroom();\n  const canClaimReward = useClaimRewardCheck();\n  const tokenPriceInDollars = useMemo(() => bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null, [bombStats]);\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n  const {\n    from,\n    to\n  } = useClaimRewardTimerBoardroom();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Value, {\n    value: getDisplayBalance(earnings),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: `≈ $${earnedInDollars}`,\n    variant: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }));\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${props => props.theme.spacing[6]}px;\n  width: 100%;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default Harvest;","map":{"version":3,"sources":["C:/Users/91799/Desktop/bomb-dashboard-final-task/src/views/Dashboard/components/Harvest.tsx"],"names":["React","useMemo","styled","Label","Value","useClaimRewardTimerBoardroom","useClaimRewardCheck","useHarvestFromBoardroom","useEarningsOnBoardroom","useBombStats","getDisplayBalance","Harvest","bombStats","onReward","earnings","canClaimReward","tokenPriceInDollars","Number","priceInDollars","toFixed","earnedInDollars","from","to","StyledCardHeader","div","StyledCardActions","props","theme","spacing","StyledCardContentInner"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAKA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,OAAOC,4BAAP,MAAyC,uDAAzC;AACA,OAAOC,mBAAP,MAAgC,8CAAhC;AAEA,OAAOC,uBAAP,MAAoC,wCAApC;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAAQC,iBAAR,QAAgC,8BAAhC;;AAEA,MAAMC,OAAiB,GAAG,MAAM;AAC9B,QAAMC,SAAS,GAAGH,YAAY,EAA9B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAaN,uBAAuB,EAA1C;AACA,QAAMO,QAAQ,GAAGN,sBAAsB,EAAvC;AACA,QAAMO,cAAc,GAAGT,mBAAmB,EAA1C;AAEA,QAAMU,mBAAmB,GAAGf,OAAO,CACjC,MAAOW,SAAS,GAAGK,MAAM,CAACL,SAAS,CAACM,cAAX,CAAN,CAAiCC,OAAjC,CAAyC,CAAzC,CAAH,GAAiD,IADhC,EAEjC,CAACP,SAAD,CAFiC,CAAnC;AAKA,QAAMQ,eAAe,GAAG,CAACH,MAAM,CAACD,mBAAD,CAAN,GAA8BC,MAAM,CAACP,iBAAiB,CAACI,QAAD,CAAlB,CAArC,EAAoEK,OAApE,CAA4E,CAA5E,CAAxB;AAEA,QAAM;AAACE,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAajB,4BAA4B,EAA/C;AAEA,sBACE,uDACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEK,iBAAiB,CAACI,QAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEU,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,MAAKM,eAAgB,EAAnC;AAAsC,IAAA,OAAO,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFV,CADF;AAMD,CArBD;;AAuBA,MAAMG,gBAAgB,GAAGrB,MAAM,CAACsB,GAAI;AACpC;AACA;AACA;AACA,CAJA;AAKA,MAAMC,iBAAiB,GAAGvB,MAAM,CAACsB,GAAI;AACrC;AACA;AACA,gBAAiBE,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AAClD;AACA,CALA;AAOA,MAAMC,sBAAsB,GAAG3B,MAAM,CAACsB,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAeb,OAAf","sourcesContent":["import React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {Box, Button, Card, CardContent, Typography} from '@material-ui/core';\n\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport CardIcon from '../../../components/CardIcon';\nimport useClaimRewardTimerBoardroom from '../../../hooks/boardroom/useClaimRewardTimerBoardroom';\nimport useClaimRewardCheck from '../../../hooks/boardroom/useClaimRewardCheck';\nimport ProgressCountdown from './ProgressCountdown';\nimport useHarvestFromBoardroom from '../../../hooks/useHarvestFromBoardroom';\nimport useEarningsOnBoardroom from '../../../hooks/useEarningsOnBoardroom';\nimport useBombStats from '../../../hooks/useBombStats';\nimport {getDisplayBalance} from '../../../utils/formatBalance';\n\nconst Harvest: React.FC = () => {\n  const bombStats = useBombStats();\n  const {onReward} = useHarvestFromBoardroom();\n  const earnings = useEarningsOnBoardroom();\n  const canClaimReward = useClaimRewardCheck();\n\n  const tokenPriceInDollars = useMemo(\n    () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\n    [bombStats],\n  );\n\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n\n  const {from, to} = useClaimRewardTimerBoardroom();\n\n  return (\n    <>\n    <Value value={getDisplayBalance(earnings)} />\n              <Label text={`≈ $${earnedInDollars}`} variant=\"yellow\" />\n    </>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n"]},"metadata":{},"sourceType":"module"}
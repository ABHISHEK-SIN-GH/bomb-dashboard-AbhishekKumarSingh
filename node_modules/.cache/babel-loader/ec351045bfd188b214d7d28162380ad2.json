{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91799\\\\Desktop\\\\bomb-dashboard-final-task\\\\src\\\\views\\\\Dashboard\\\\BombBank.tsx\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useWallet } from 'use-wallet';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Harvest from './componentsBank/Harvest';\nimport Stake from './componentsBank/Stake';\nimport useBank from '../../hooks/useBank';\nimport useStatsForPool from '../../hooks/useStatsForPool';\nimport useRedeem from '../../hooks/useRedeem';\nimport useBombFinance from '../../hooks/useBombFinance';\n//import { bankDefinitions } from '../../config';\nconst useStyles = makeStyles(theme => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px'\n    }\n  }\n}));\n\nconst BombBank = () => {\n  useEffect(() => window.scrollTo(0, 0));\n  const classes = useStyles();\n  const bank = useBank(\"BombBtcbLPBShareRewardPool\");\n  const {\n    account\n  } = useWallet();\n  const {\n    onRedeem\n  } = useRedeem(bank);\n  let statsOnPool = useStatsForPool(bank); // console.log(statsOnPool);\n  //   if (bank.depositTokenName.includes('80BOMB-20BTCB-LP') || bank.depositTokenName.includes('80BSHARE-20WBNB-LP')) {\n  //     statsOnPool = {\n  //       dailyAPR: 'COMING SOON',\n  //       yearlyAPR: 'COMING SOON',\n  //       TVL: 'COMING SOON',\n  //     }\n  //   } \n  //const statsOnPool = useStatsForPool(bank);\n\n  let vaultUrl;\n\n  if (bank.depositTokenName.includes('BOMB-BTCB')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else if (bank.depositTokenName.includes('BOMB-BSHARE')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/';\n  } else if (bank.depositTokenName.includes('BSHARE-BNB')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bshare-wbnb';\n  }\n\n  return account && bank ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    style: {\n      marginBottom: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"APR\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, bank.closedForStaking ? '0.00' : statsOnPool === null || statsOnPool === void 0 ? void 0 : statsOnPool.yearlyAPR, \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Daily APR\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, bank.closedForStaking ? '0.00' : statsOnPool === null || statsOnPool === void 0 ? void 0 : statsOnPool.dailyAPR, \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"TVL\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"$\", statsOnPool === null || statsOnPool === void 0 ? void 0 : statsOnPool.TVL)))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledBank, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Harvest, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Stake, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), bank.depositTokenName.includes('LP') && /*#__PURE__*/React.createElement(LPTokenHelpText, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onRedeem,\n    className: \"shinyButtonSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Claim & Withdraw\")), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })))) : !bank ? /*#__PURE__*/React.createElement(BankNotFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(UnlockWallet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  });\n};\n\nconst LPTokenHelpText = _ref => {\n  let {\n    bank\n  } = _ref;\n  const bombFinance = useBombFinance();\n  const bombAddr = bombFinance.BOMB.address;\n  const bshareAddr = bombFinance.BSHARE.address;\n  const busmAddr = bombFinance.BUSM.address;\n  const busdAddr = bombFinance.BUSD.address; //const depositToken = bank.depositTokenName;\n  //console.log({depositToken})\n\n  let pairName;\n  let uniswapUrl; // let vaultUrl: string;\n\n  if (bank.depositTokenName.includes('BOMB-BTCB')) {\n    pairName = 'BOMB-BTCB pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c/' + bombAddr; //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else if (bank.depositTokenName.includes('80BOMB-20BTCB-LP')) {\n    pairName = 'BOMB MAXI 80% BOMB - 20% BTCB (at ACSI.finance)';\n    uniswapUrl = 'https://app.acsi.finance/#/pool/0xd6f52e8ab206e59a1e13b3d6c5b7f31e90ef46ef000200000000000000000028/invest'; //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else if (bank.depositTokenName.includes('80BSHARE-20WBNB-LP')) {\n    pairName = 'BSHARE MAXI 80% BSHARE - 20% BNB (at ACSI.finance)';\n    uniswapUrl = 'https://app.acsi.finance/#/pool/0x2c374ed1575e5c2c02c569f627299e902a1972cb000200000000000000000027/invest'; //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else if (bank.depositTokenName.includes('BOMB-BSHARE')) {\n    pairName = 'BOMB-BSHARE pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/' + bombAddr + '/' + bshareAddr; //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else if (bank.depositTokenName.includes('BUSM-BUSD')) {\n    pairName = 'BUSM-BUSD pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/' + busmAddr + '/' + busdAddr; //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  } else {\n    pairName = 'BSHARE-BNB pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/BNB/' + bshareAddr; //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bshare-bnb';\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    href: uniswapUrl,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, `Provide liquidity for ${pairName} now!`)));\n};\n\nconst BankNotFound = () => {\n  return /*#__PURE__*/React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    icon: \"\\uD83C\\uDFDA\",\n    title: \"Not Found\",\n    subtitle: \"You've hit a bank just robbed by unicorns.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst StyledBank = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  color: ${props => props.theme.color.primary.main};\n`;\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst Center = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\nexport default BombBank;","map":{"version":3,"sources":["C:/Users/91799/Desktop/bomb-dashboard-final-task/src/views/Dashboard/BombBank.tsx"],"names":["React","useEffect","styled","useWallet","makeStyles","Box","Button","Card","CardContent","Typography","Grid","PageHeader","Spacer","UnlockWallet","Harvest","Stake","useBank","useStatsForPool","useRedeem","useBombFinance","useStyles","theme","gridItem","height","breakpoints","up","BombBank","window","scrollTo","classes","bank","account","onRedeem","statsOnPool","vaultUrl","depositTokenName","includes","marginBottom","textAlign","closedForStaking","yearlyAPR","dailyAPR","TVL","LPTokenHelpText","bombFinance","bombAddr","BOMB","address","bshareAddr","BSHARE","busmAddr","BUSM","busdAddr","BUSD","pairName","uniswapUrl","BankNotFound","StyledBank","div","StyledLink","a","props","color","primary","main","StyledCardsWrapper","StyledCardWrapper","Center"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport styled from 'styled-components';\n\nimport {useParams} from 'react-router-dom';\nimport {useWallet} from 'use-wallet';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport {Box, Button, Card, CardContent, Typography, Grid} from '@material-ui/core';\n\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Harvest from './componentsBank/Harvest';\nimport Stake from './componentsBank/Stake';\nimport useBank from '../../hooks/useBank';\nimport useStatsForPool from '../../hooks/useStatsForPool';\nimport useRedeem from '../../hooks/useRedeem';\nimport {Bank as BankEntity} from '../../bomb-finance';\nimport useBombFinance from '../../hooks/useBombFinance';\nimport {Alert} from '@material-ui/lab';\n//import { bankDefinitions } from '../../config';\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px',\n    },\n  },\n}));\n\nconst BombBank: React.FC = () => {\n  useEffect(() => window.scrollTo(0, 0));\n  const classes = useStyles();\n  const bank = useBank(\"BombBtcbLPBShareRewardPool\");\n\n  const {account} = useWallet();\n  const { onRedeem } = useRedeem(bank);\n\n   let statsOnPool = useStatsForPool(bank);\n  // console.log(statsOnPool);\n\n  //   if (bank.depositTokenName.includes('80BOMB-20BTCB-LP') || bank.depositTokenName.includes('80BSHARE-20WBNB-LP')) {\n  //     statsOnPool = {\n  //       dailyAPR: 'COMING SOON',\n  //       yearlyAPR: 'COMING SOON',\n  //       TVL: 'COMING SOON',\n  //     }\n  //   } \n  \n  \n  //const statsOnPool = useStatsForPool(bank);\n  let vaultUrl: string;\n  if (bank.depositTokenName.includes('BOMB-BTCB')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n  \n   else if (bank.depositTokenName.includes('BOMB-BSHARE')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/';\n  }\n     else if (bank.depositTokenName.includes('BSHARE-BNB')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bshare-wbnb';\n  }\n\n  return account && bank ? (\n    <>\n      <Box>\n        <Grid container justify=\"center\" spacing={3} style={{marginBottom: '50px'}}>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{textAlign: 'center'}}>\n                <Typography>APR</Typography>\n                <Typography>{bank.closedForStaking ? '0.00' : statsOnPool?.yearlyAPR}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{textAlign: 'center'}}>\n                <Typography>Daily APR</Typography>\n                <Typography>{bank.closedForStaking ? '0.00' : statsOnPool?.dailyAPR}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{textAlign: 'center'}}>\n                <Typography>TVL</Typography>\n                <Typography>${statsOnPool?.TVL}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n      <Box mt={5}>\n        <StyledBank>\n          <StyledCardsWrapper>\n            <StyledCardWrapper>\n              <Harvest bank={bank} />\n            </StyledCardWrapper>\n            <Spacer />\n            <StyledCardWrapper>{<Stake bank={bank} />}</StyledCardWrapper>\n          </StyledCardsWrapper>\n          <Spacer size=\"lg\" />\n          {bank.depositTokenName.includes('LP') && <LPTokenHelpText bank={bank} />}\n          <Spacer size=\"lg\" />\n          <div>\n            <Button onClick={onRedeem} className=\"shinyButtonSecondary\">\n              Claim &amp; Withdraw\n            </Button>\n          </div>\n          <Spacer size=\"lg\" />\n        </StyledBank>\n      </Box>\n    </>\n  ) : !bank ? (\n    <BankNotFound />\n  ) : (\n    <UnlockWallet />\n  );\n};\n\nconst LPTokenHelpText: React.FC<{bank: BankEntity}> = ({bank}) => {\n  const bombFinance = useBombFinance();\n  const bombAddr = bombFinance.BOMB.address;\n  const bshareAddr = bombFinance.BSHARE.address;\n    const busmAddr = bombFinance.BUSM.address;\n  const busdAddr = bombFinance.BUSD.address;\n\n  //const depositToken = bank.depositTokenName;\n  //console.log({depositToken})\n  let pairName: string;\n  let uniswapUrl: string;\n // let vaultUrl: string;\n  if (bank.depositTokenName.includes('BOMB-BTCB')) {\n    pairName = 'BOMB-BTCB pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c/' + bombAddr;\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n    else if (bank.depositTokenName.includes('80BOMB-20BTCB-LP')) {\n    pairName = 'BOMB MAXI 80% BOMB - 20% BTCB (at ACSI.finance)';\n    uniswapUrl = 'https://app.acsi.finance/#/pool/0xd6f52e8ab206e59a1e13b3d6c5b7f31e90ef46ef000200000000000000000028/invest';\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n      else if (bank.depositTokenName.includes('80BSHARE-20WBNB-LP')) {\n    pairName = 'BSHARE MAXI 80% BSHARE - 20% BNB (at ACSI.finance)';\n    uniswapUrl = 'https://app.acsi.finance/#/pool/0x2c374ed1575e5c2c02c569f627299e902a1972cb000200000000000000000027/invest';\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n  else if (bank.depositTokenName.includes('BOMB-BSHARE')) {\n    pairName = 'BOMB-BSHARE pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/' + bombAddr + '/' + bshareAddr;\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n      else if (bank.depositTokenName.includes('BUSM-BUSD')) {\n    pairName = 'BUSM-BUSD pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/' + busmAddr + '/' + busdAddr;\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n    \n  else {\n    pairName = 'BSHARE-BNB pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/BNB/' + bshareAddr;\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bshare-bnb';\n\n  }\n  return (\n    <Card>\n      <CardContent>\n        <StyledLink href={uniswapUrl} target=\"_blank\">\n          {`Provide liquidity for ${pairName} now!`}\n        </StyledLink>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst BankNotFound = () => {\n  return (\n    <Center>\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\"You've hit a bank just robbed by unicorns.\" />\n    </Center>\n  );\n};\n\nconst StyledBank = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  color: ${(props) => props.theme.color.primary.main};\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst Center = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default BombBank;\n"]},"metadata":{},"sourceType":"module"}
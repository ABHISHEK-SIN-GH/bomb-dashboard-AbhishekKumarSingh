{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91799\\\\Desktop\\\\bomb-dashboard-final-task\\\\src\\\\views\\\\Dashboard\\\\componentsBank\\\\Harvest.tsx\";\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Typography } from '@material-ui/core'; // import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\n\nimport useEarnings from '../../../hooks/useEarnings';\nimport useHarvest from '../../../hooks/useHarvest';\nimport Label from '../../../components/Label';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nimport useBombStats from '../../../hooks/useBombStats';\nimport useShareStats from '../../../hooks/usebShareStats';\n\nconst Harvest = _ref => {\n  let {\n    bank\n  } = _ref;\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\n  const {\n    onReward\n  } = useHarvest(bank);\n  const bombStats = useBombStats();\n  const tShareStats = useShareStats();\n  const tokenName = bank.earnTokenName === 'BSHARE' ? 'BSHARE' : 'BOMB';\n  const tokenStats = bank.earnTokenName === 'BSHARE' ? tShareStats : bombStats;\n  const tokenPriceInDollars = useMemo(() => tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null, [tokenStats]);\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n    text: getDisplayBalance(earnings),\n    variant: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textTransform: 'uppercase',\n      color: '#fffff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, `≈ $${earnedInDollars}`));\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${props => props.theme.spacing[6]}px;\n  width: 100%;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default Harvest;","map":{"version":3,"sources":["C:/Users/91799/Desktop/bomb-dashboard-final-task/src/views/Dashboard/componentsBank/Harvest.tsx"],"names":["React","useMemo","styled","Typography","useEarnings","useHarvest","Label","getDisplayBalance","useBombStats","useShareStats","Harvest","bank","earnings","contract","earnTokenName","poolId","onReward","bombStats","tShareStats","tokenName","tokenStats","tokenPriceInDollars","Number","priceInDollars","toFixed","earnedInDollars","textTransform","color","StyledCardHeader","div","StyledCardActions","props","theme","spacing","StyledCardContentInner"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAAmCC,UAAnC,QAAoD,mBAApD,C,CACA;AACA;AACA;;AAGA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAAQC,iBAAR,QAAgC,8BAAhC;AAGA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;AAMA,MAAMC,OAA+B,GAAG,QAAY;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAClD,QAAMC,QAAQ,GAAGR,WAAW,CAACO,IAAI,CAACE,QAAN,EAAgBF,IAAI,CAACG,aAArB,EAAoCH,IAAI,CAACI,MAAzC,CAA5B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAaX,UAAU,CAACM,IAAD,CAA7B;AACA,QAAMM,SAAS,GAAGT,YAAY,EAA9B;AACA,QAAMU,WAAW,GAAGT,aAAa,EAAjC;AAEA,QAAMU,SAAS,GAAGR,IAAI,CAACG,aAAL,KAAuB,QAAvB,GAAkC,QAAlC,GAA6C,MAA/D;AACA,QAAMM,UAAU,GAAGT,IAAI,CAACG,aAAL,KAAuB,QAAvB,GAAkCI,WAAlC,GAAgDD,SAAnE;AACA,QAAMI,mBAAmB,GAAGpB,OAAO,CACjC,MAAOmB,UAAU,GAAGE,MAAM,CAACF,UAAU,CAACG,cAAZ,CAAN,CAAkCC,OAAlC,CAA0C,CAA1C,CAAH,GAAkD,IADlC,EAEjC,CAACJ,UAAD,CAFiC,CAAnC;AAIA,QAAMK,eAAe,GAAG,CAACH,MAAM,CAACD,mBAAD,CAAN,GAA8BC,MAAM,CAACf,iBAAiB,CAACK,QAAD,CAAlB,CAArC,EAAoEY,OAApE,CAA4E,CAA5E,CAAxB;AACA,sBACE,uDACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEjB,iBAAiB,CAACK,QAAD,CAA9B;AAA0C,IAAA,OAAO,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACc,MAAAA,aAAa,EAAE,WAAhB;AAA6BC,MAAAA,KAAK,EAAE;AAApC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoE,MAAKF,eAAgB,EAAzF,CAHF,CADF;AAOD,CApBD;;AAsBA,MAAMG,gBAAgB,GAAG1B,MAAM,CAAC2B,GAAI;AACpC;AACA;AACA;AACA,CAJA;AAKA,MAAMC,iBAAiB,GAAG5B,MAAM,CAAC2B,GAAI;AACrC;AACA;AACA,gBAAiBE,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;AAClD;AACA,CALA;AAOA,MAAMC,sBAAsB,GAAGhC,MAAM,CAAC2B,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAenB,OAAf","sourcesContent":["import React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {Button, Card, CardContent, Typography} from '@material-ui/core';\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport Value from '../../../components/Value';\nimport useEarnings from '../../../hooks/useEarnings';\nimport useHarvest from '../../../hooks/useHarvest';\nimport Label from '../../../components/Label';\nimport {getDisplayBalance} from '../../../utils/formatBalance';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport {Bank} from '../../../bomb-finance';\nimport useBombStats from '../../../hooks/useBombStats';\nimport useShareStats from '../../../hooks/usebShareStats';\n\ninterface HarvestProps {\n  bank: Bank;\n}\n\nconst Harvest: React.FC<HarvestProps> = ({bank}) => {\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\n  const {onReward} = useHarvest(bank);\n  const bombStats = useBombStats();\n  const tShareStats = useShareStats();\n\n  const tokenName = bank.earnTokenName === 'BSHARE' ? 'BSHARE' : 'BOMB';\n  const tokenStats = bank.earnTokenName === 'BSHARE' ? tShareStats : bombStats;\n  const tokenPriceInDollars = useMemo(\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\n    [tokenStats],\n  );\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n  return (\n    <>\n      <Label text={getDisplayBalance(earnings)} variant=\"yellow\" />\n      \n      <Typography style={{textTransform: 'uppercase', color: '#fffff'}}>{`≈ $${earnedInDollars}`}</Typography>\n    </>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n"]},"metadata":{},"sourceType":"module"}